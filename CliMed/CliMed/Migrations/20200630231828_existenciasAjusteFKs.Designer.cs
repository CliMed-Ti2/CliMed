// <auto-generated />
using System;
using CliMed.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CliMed.Migrations
{
    [DbContext(typeof(CliMedBD))]
    [Migration("20200630231828_existenciasAjusteFKs")]
    partial class existenciasAjusteFKs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CliMed.Models.Clinicas", b =>
                {
                    b.Property<int>("IdClinica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodPostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("Contacto")
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("NIF")
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("nAndar")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<int>("nPorta")
                        .HasColumnType("int");

                    b.HasKey("IdClinica");

                    b.ToTable("Clinicas");

                    b.HasData(
                        new
                        {
                            IdClinica = 1,
                            CodPostal = "2252-965",
                            Contacto = "964256245",
                            EMail = "doutorConsulta@climed.com",
                            Foto = "doutorConsulta.jpeg",
                            Localidade = "Oeiras",
                            NIF = "245568236",
                            Nome = "Clinica Doutor Consulta",
                            Rua = "Rua Antonio Miguel",
                            nAndar = "1E",
                            nPorta = 45
                        },
                        new
                        {
                            IdClinica = 2,
                            CodPostal = "2622-965",
                            Contacto = "915968212",
                            EMail = "saudeConsigo@climed.com",
                            Foto = "saudeConsigo.jpeg",
                            Localidade = "Estoril",
                            NIF = "256989236",
                            Nome = "Clinica Saude Consigo",
                            Rua = "Rua Tomás Antunes",
                            nAndar = "1D",
                            nPorta = 3
                        });
                });

            modelBuilder.Entity("CliMed.Models.Existencias", b =>
                {
                    b.Property<int>("IdExistencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClinicaFK")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoFK")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("IdExistencia");

                    b.HasIndex("ClinicaFK");

                    b.HasIndex("ProdutoFK");

                    b.ToTable("Existencias");
                });

            modelBuilder.Entity("CliMed.Models.Funcionarios", b =>
                {
                    b.Property<int>("IdFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CC")
                        .IsRequired()
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.Property<int>("ClinicaFK")
                        .HasColumnType("int");

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.Property<DateTime>("DataNasc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Morada")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("NIF")
                        .IsRequired()
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("IdFuncionario");

                    b.HasIndex("ClinicaFK");

                    b.ToTable("Funcionarios");

                    b.HasData(
                        new
                        {
                            IdFuncionario = 1,
                            CC = "125365698",
                            ClinicaFK = 1,
                            Contacto = "965123325",
                            DataNasc = new DateTime(1980, 1, 20, 12, 15, 12, 0, DateTimeKind.Unspecified),
                            Foto = "joseTevez.jpeg",
                            Mail = "joseTevez@climed.com",
                            Morada = "Avenida Vasco da Gama",
                            NIF = "198563256",
                            Nome = "Jose Alberto Tevez"
                        },
                        new
                        {
                            IdFuncionario = 2,
                            CC = "186123402",
                            ClinicaFK = 2,
                            Contacto = "965123325",
                            DataNasc = new DateTime(1980, 11, 5, 22, 10, 7, 0, DateTimeKind.Unspecified),
                            Foto = "mariaSofia.jpeg",
                            Mail = "mariaSofia@climed.com",
                            Morada = "Avenida Almirante Reis",
                            NIF = "201562152",
                            Nome = "Maria Oliveira Sofia"
                        });
                });

            modelBuilder.Entity("CliMed.Models.Produtos", b =>
                {
                    b.Property<int>("IDProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Designacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDProduto");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            IDProduto = 1,
                            Designacao = "Estetoscopio de Cabeca Dupla",
                            Foto = "estetoscopio.jpeg",
                            Tipo = "Manual"
                        },
                        new
                        {
                            IDProduto = 2,
                            Designacao = "Garrote",
                            Foto = "garrote.jpeg",
                            Tipo = "Manual"
                        },
                        new
                        {
                            IDProduto = 3,
                            Designacao = "Medidor de pressão",
                            Foto = "medidorPressao.jpeg",
                            Tipo = "Digital"
                        },
                        new
                        {
                            IDProduto = 4,
                            Designacao = "Oxímetro de pulso",
                            Foto = "oximetroPulso.jpeg",
                            Tipo = "Digital"
                        });
                });

            modelBuilder.Entity("CliMed.Models.Existencias", b =>
                {
                    b.HasOne("CliMed.Models.Clinicas", "Clinica")
                        .WithMany("ListaClinicaExistencias")
                        .HasForeignKey("ClinicaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CliMed.Models.Produtos", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CliMed.Models.Funcionarios", b =>
                {
                    b.HasOne("CliMed.Models.Clinicas", "Clinica")
                        .WithMany()
                        .HasForeignKey("ClinicaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
